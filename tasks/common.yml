---
- name: K8s-Common | Create manifests directory
  file: path={{k8s_manifests_dir}}/{{k8s_namespace}} state=directory

- name: K8s-Common | Write namespace file
  template: src=namespace.yml dest="{{k8s_manifests_dir}}/{{k8s_namespace}}-ns.yml" backup=yes
  when: k8s_namespace is defined

- name: K8s-Common | Create namespace if needed
  kube:
    name: "{{k8s_namespace}}"
    resource: "ns"
    filename: "{{k8s_manifests_dir}}/{{k8s_namespace}}-ns.yml"
    state: "present"
  when: k8s_namespace is defined
  ignore_errors: yes

- name: K8s-Common | Write conf files
  template: src={{templates_path}}/{{item.file}} dest={{k8s_manifests_dir}}/{{k8s_namespace}}/{{item.file|basename}} backup=yes
  with_items: k8s_resources
  when: "{{item.sharded is not defined or item.sharded == False}}"
  register: files_changed

- name: K8s-Common | Start resources
  kube:
    name: "{{item.item.name}}"
    namespace: "{{item.item.namespace|default(k8s_namespace)|default('default')}}"
    resource: "{{item.item.resource}}"
    filename: "{{k8s_manifests_dir}}/{{k8s_namespace}}/{{item.item.file|basename}}"
    state: "{{k8s_state | default(item.item.state) | default(item.changed | ternary('latest','present')) }}"
  when: "{{item.skipped is not defined or item.skipped == False}}"
  with_items: files_changed.results

- include: shards.yml
  when: "{{k8s_shards is defined and k8s_shards|length > 0}}"